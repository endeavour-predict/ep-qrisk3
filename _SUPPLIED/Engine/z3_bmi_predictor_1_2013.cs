/* 
 * (c) 2013 ClinRisk Ltd.  All rights reserved.
 * This file has been auto-generated.
 * XML source: z3_bmi_predictor_1_2013.xml
 * STATA dta time stamp: 6 Nov 2012 10:19
 * .NET file create date: Fri 15 Mar 2013 13:49:53 GMT
 */

using System;
using CRStandardDefinitions;

namespace ClinRiskAutogenerated 
{
	public class z3_bmi_predictor_1_2013 {
			/* bmi */

			static private double bmi_male_raw(
				int age,int b_cvd,int b_treatedhyp,int b_type1,int b_type2,int ethrisk,int smoke_cat
			)
			{

				/* The conditional arrays */

				double[] Iethrisk = {
					0,
					0,
					-1.8217167319067433000000000,
					-0.9520655246699364400000000,
					-2.1860119233434889000000000,
					-1.7452219954045136000000000,
					-0.3850490189435085700000000,
					-0.8517253256865258100000000,
					-3.2875487557002709000000000,
					-0.8617361735280048000000000
				};
				double[] Ismoke = {
					0,
					0.5000425672205990300000000,
					-1.0002016464026335000000000,
					-0.9980882122906036300000000,
					-0.7012867820813426500000000
				};

				/* Applying the fractional polynomial transforms */
				/* (which includes scaling)                      */

				double dage = age;
				dage=dage/10;
				double age_1 = dage;
				double age_2 = Math.Pow(dage,2);

				/* The normalisation coefficients */

				double mage_1 = 5.198312759399414;
				double mage_2 = 27.022455215454102;

				/* Centring the continuous variables */

				age_1 = age_1 - mage_1;
				age_2 = age_2 - mage_2;

				/* Start of Sum */
				double a=0;

				/* The conditional sums */

				a += Iethrisk[ethrisk];
				a += Ismoke[smoke_cat];

				/* The continuous coefficients */

				double cage_1 = 1.9567611350369301000000000;
				double cage_2 = -0.2007646304069967700000000;

				/* Sum from continuous values */

				a += age_1 * cage_1;
				a += age_2 * cage_2;

				/* The boolean coefficients */

				double cb_cvd = 0.2850338610404989400000000;
				double cb_treatedhyp = 1.6737020218768797000000000;
				double cb_type1 = -0.0440987328609482860000000;
				double cb_type2 = 2.2694506765685776000000000;

				/* Sum from boolean values */

				a += b_cvd * cb_cvd;
				a += b_treatedhyp * cb_treatedhyp;
				a += b_type1 * cb_type1;
				a += b_type2 * cb_type2;

				/* The interaction coefficients */


				/* Sum from interaction terms */


				/* Calculate the score itself */
				double constant =  27.7105062130651550000000000;
				double score = a + constant;
				return score;
			}

            // Comments on ranges for integers should be autogenerated
            // age must be in range (25,99)
			static public Double bmi_male(
				int age,bool b_cvd,bool b_treatedhyp,DiabetesCat diabetes_cat,Ethnicity ethnicity,SmokeCat smoke_cat
			)
			{
                // put age within allowed bounds
                if (age < 25)
                    age = 25;
                if (age > 99)
                    age = 99;
				Double score;
				double tmp = bmi_male_raw(
                    age,
                    Utilities.boolToInt(b_cvd),
                    Utilities.boolToInt(b_treatedhyp),
                    Utilities.diabetescatToType1(diabetes_cat),
                    Utilities.diabetescatToType2(diabetes_cat),
                    Utilities.ethnicityToEthrisk(ethnicity),
                    Utilities.smokecatToInt(smoke_cat)
                );
				tmp = Math.Round(tmp*1000000.0)/1000000.0;
				score = tmp;

				return score;
			}

			/* End of bmi */

		}
}
